version: '3.9'
services:
  # === Infraestructura AWS
  infradeployer:
    build: # Allows to build an image from local Dockerfile.
      context: infra
      dockerfile: Dockerfile
    container_name: infradeployer
    volumes:
      - ./shared:/shared
      - infra_terraform_state:/app/terraform
    env_file:
      - .env
    entrypoint: ["bash", "deploy_infra.sh"]
    networks:
      - micro_net
    restart: "no" 

  # === Bases de datos PostgreSQL ===
  dbauthentication:
    image: postgres:16.1
    container_name: dbauthentication
    restart: always
    environment:
        POSTGRES_USER: admin
        POSTGRES_PASSWORD: dbauthentication
        POSTGRES_DB: postgres
    ports:
      - "5434:5432"         
    volumes:
      - auth_db_data:/var/lib/postgresql/data
      - ./local-databases/db-authentication/sql/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql:ro
      - ./local-databases/db-authentication/sql/data.sql:/docker-entrypoint-initdb.d/data.sql:ro
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - micro_net

  dbloanapplications: #select * from credi_ya.loan_applications;
    image: postgres:16.1
    container_name: dbloanapplications
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: dbloanapplications
      POSTGRES_DB: postgres
    ports:
      - "5435:5432"
    volumes:
      - loan_db_data:/var/lib/postgresql/data
      - ./local-databases/db-loan-application/sql/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql:ro
      - ./local-databases/db-loan-application/sql/data.sql:/docker-entrypoint-initdb.d/data.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - micro_net

  # === PgAdmin opcional ===
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "81:80"
    depends_on:
      - dbauthentication
      - dbloanapplications
    networks:
      - micro_net

  # === Microservicio Autenticaci√≥n ===
  msauthentication:
    build:
      context: https://github.com/jaimebp07/pragma-ms-authentication.git
      #context: ./pragma-ms-authentication
      dockerfile: Dockerfile
    container_name: msauthentication
    depends_on:
      - dbauthentication
      - infradeployer
    environment:
        SPRING_PROFILES_ACTIVE: docker
        DB_HOST: dbauthentication
        DB_PORT: 5432
        DB_NAME: postgres
        DB_SCHEMA: credi_ya
        DB_USER: admin
        DB_PASSWORD: dbauthentication
        SPRING_DATASOURCE_URL: jdbc:postgresql://dbauthentication:5432/postgres
        SPRING_DATASOURCE_USERNAME: admin
        SPRING_DATASOURCE_PASSWORD: dbauthentication
    ports:
      - "8080:8080"
    networks:
      - micro_net

  # === Microservicio Solicitudes ===
  msloanapplications:
    build:
      context: https://github.com/jaimebp07/pragma-ms-loan-application.git
      #context: ./pragma-ms-loan-application
      dockerfile: Dockerfile
    container_name: msloanapplications
    depends_on:
      dbloanapplications:
        condition: service_healthy
      infradeployer:
        condition: service_completed_successfully
      msauthentication:
        condition: service_started
    env_file:
      - .env                              #Credenciales de AWS
      - ./shared/msloanapplications.env   # variables generadas por terraform (SQS, SNS, etc.)
    environment:
        SPRING_PROFILES_ACTIVE: docker
        DB_HOST: dbloanapplications
        DB_PORT: 5432
        DB_NAME: postgres
        DB_USER: admin
        DB_PASSWORD: dbloanapplications
        SPRING_DATASOURCE_URL: jdbc:postgresql://dbloanapplications:5432/postgres
        SPRING_DATASOURCE_USERNAME: admin
        SPRING_DATASOURCE_PASSWORD: dbloanapplications
        AUTHENTICATION_URL: http://msauthentication:8080
    ports:
      - "8082:8082"
    networks:
      - micro_net

volumes:
  auth_db_data:
  loan_db_data:
  infra_terraform_state:

networks:
  micro_net:
    driver: bridge
